services:
  db:
    image: postgres:15
    container_name: db-post_gamecenter
    command: -p 5432
    expose:
      - 5432
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - network
  web:
    container_name: app_gamecenter
    build: .
    command: uv run uvicorn app.main:app --host 0.0.0.0 --port 80
    env_file:
      - .env
    expose:
      - 80  # Expose internally for Nginx proxy
    volumes:
      - ./static:/backend/static
    depends_on:
      - db
    networks:
      - network
  nginx:
    image: nginx:1-alpine
    container_name: nginx_gamecenter
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - web
  certbot:
    image: certbot/certbot
    container_name: certbot_gamecenter
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - network
networks:
  network:
    driver: bridge
volumes:
  postgres_data:
